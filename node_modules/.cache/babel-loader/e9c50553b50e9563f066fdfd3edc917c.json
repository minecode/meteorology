{"ast":null,"code":"import Slider from '@material-ui/core/Slider';\nimport { withStyles } from '@material-ui/core/styles';\nconst months = ['Janeiro', 'Fevereio', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n\nfunction toRad(Value) {\n  return Value * Math.PI / 180;\n}\n\nfunction calcCrow(lat1, lon1, lat2, lon2) {\n  var R = 6371; // km\n\n  var dLat = toRad(lat2 - lat1);\n  var dLon = toRad(lon2 - lon1);\n  var lat1 = toRad(lat1);\n  var lat2 = toRad(lat2);\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c;\n  return d;\n}\n\nconst CustomSlider = withStyles({\n  root: {\n    width: '75%'\n  },\n  markLabel: {\n    color: '#a9a9a9'\n  },\n  markLabelActive: {\n    color: '#f1f1f1'\n  }\n})(Slider);\n\nDate.prototype.addDays = function (days) {\n  var date = new Date(this.valueOf());\n  date.setDate(date.getDate() + days);\n  return date;\n};\n\nconst currentDate = new Date();\nconst marks = [{\n  value: 1,\n  label: currentDate.addDays(0).getDate() + ' de ' + months[currentDate.addDays(0).getMonth()]\n}, {\n  value: 2,\n  label: currentDate.addDays(1).getDate() + ' de ' + months[currentDate.addDays(1).getMonth()]\n}, {\n  value: 3,\n  label: currentDate.addDays(2).getDate() + ' de ' + months[currentDate.addDays(2).getMonth()]\n}, {\n  value: 4,\n  label: currentDate.addDays(3).getDate() + ' de ' + months[currentDate.addDays(3).getMonth()]\n}, {\n  value: 5,\n  label: currentDate.addDays(4).getDate() + ' de ' + months[currentDate.addDays(4).getMonth()]\n}];\n\nasync function getNearLocation() {\n  setError(null);\n  await get('distrits-islands.json', {}).then(data => {\n    dispatch({\n      type: 'SET_REGIONS',\n      regions: data.data\n    });\n\n    if (coords !== 'Blocked') {\n      let dist = null;\n      let tempLocal = null;\n      data.data.map(local => {\n        let temp = calcCrow(local.latitude, local.longitude, coords.latitude, coords.longitude);\n\n        if (dist === null) {\n          dist = temp;\n          tempLocal = local;\n        } else if (Math.abs(temp) < Math.abs(dist)) {\n          dist = temp;\n          tempLocal = local;\n        }\n      });\n      dispatch({\n        type: 'SET_NEAR_LOCATION',\n        nearLocation: tempLocal\n      });\n    } else {\n      dispatch({\n        type: 'SET_NEAR_LOCATION',\n        nearLocation: data.data[0]\n      });\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n}\n\nexport { calcCrow, CustomSlider, marks, getNearLocation };","map":{"version":3,"sources":["C:/Users/fhenriques/Documents/Rep/fe/src/utils/index.js"],"names":["Slider","withStyles","months","toRad","Value","Math","PI","calcCrow","lat1","lon1","lat2","lon2","R","dLat","dLon","a","sin","cos","c","atan2","sqrt","d","CustomSlider","root","width","markLabel","color","markLabelActive","Date","prototype","addDays","days","date","valueOf","setDate","getDate","currentDate","marks","value","label","getMonth","getNearLocation","setError","get","then","data","dispatch","type","regions","coords","dist","tempLocal","map","local","temp","latitude","longitude","abs","nearLocation","catch","error","console","log"],"mappings":"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","sourcesContent":["import Slider from '@material-ui/core/Slider';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst months = [\r\n\t'Janeiro',\r\n\t'Fevereio',\r\n\t'Março',\r\n\t'Abril',\r\n\t'Maio',\r\n\t'Junho',\r\n\t'Julho',\r\n\t'Agosto',\r\n\t'Setembro',\r\n\t'Outubro',\r\n\t'Novembro',\r\n\t'Dezembro',\r\n];\r\n\r\nfunction toRad(Value) {\r\n\treturn (Value * Math.PI) / 180;\r\n}\r\n\r\nfunction calcCrow(lat1, lon1, lat2, lon2) {\r\n\tvar R = 6371; // km\r\n\tvar dLat = toRad(lat2 - lat1);\r\n\tvar dLon = toRad(lon2 - lon1);\r\n\tvar lat1 = toRad(lat1);\r\n\tvar lat2 = toRad(lat2);\r\n\r\n\tvar a =\r\n\t\tMath.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n\t\tMath.sin(dLon / 2) *\r\n\t\t\tMath.sin(dLon / 2) *\r\n\t\t\tMath.cos(lat1) *\r\n\t\t\tMath.cos(lat2);\r\n\tvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\tvar d = R * c;\r\n\treturn d;\r\n}\r\n\r\nconst CustomSlider = withStyles({\r\n\troot: {\r\n\t\twidth: '75%',\r\n\t},\r\n\tmarkLabel: {\r\n\t\tcolor: '#a9a9a9',\r\n\t},\r\n\tmarkLabelActive: {\r\n\t\tcolor: '#f1f1f1',\r\n\t},\r\n})(Slider);\r\n\r\nDate.prototype.addDays = function (days) {\r\n\tvar date = new Date(this.valueOf());\r\n\tdate.setDate(date.getDate() + days);\r\n\treturn date;\r\n};\r\n\r\nconst currentDate = new Date();\r\n\r\nconst marks = [\r\n\t{\r\n\t\tvalue: 1,\r\n\t\tlabel:\r\n\t\t\tcurrentDate.addDays(0).getDate() +\r\n\t\t\t' de ' +\r\n\t\t\tmonths[currentDate.addDays(0).getMonth()],\r\n\t},\r\n\t{\r\n\t\tvalue: 2,\r\n\t\tlabel:\r\n\t\t\tcurrentDate.addDays(1).getDate() +\r\n\t\t\t' de ' +\r\n\t\t\tmonths[currentDate.addDays(1).getMonth()],\r\n\t},\r\n\t{\r\n\t\tvalue: 3,\r\n\t\tlabel:\r\n\t\t\tcurrentDate.addDays(2).getDate() +\r\n\t\t\t' de ' +\r\n\t\t\tmonths[currentDate.addDays(2).getMonth()],\r\n\t},\r\n\t{\r\n\t\tvalue: 4,\r\n\t\tlabel:\r\n\t\t\tcurrentDate.addDays(3).getDate() +\r\n\t\t\t' de ' +\r\n\t\t\tmonths[currentDate.addDays(3).getMonth()],\r\n\t},\r\n\t{\r\n\t\tvalue: 5,\r\n\t\tlabel:\r\n\t\t\tcurrentDate.addDays(4).getDate() +\r\n\t\t\t' de ' +\r\n\t\t\tmonths[currentDate.addDays(4).getMonth()],\r\n\t},\r\n];\r\n\r\nasync function getNearLocation() {\r\n\tsetError(null);\r\n\tawait get('distrits-islands.json', {})\r\n\t\t.then((data) => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'SET_REGIONS',\r\n\t\t\t\tregions: data.data,\r\n\t\t\t});\r\n\t\t\tif (coords !== 'Blocked') {\r\n\t\t\t\tlet dist = null;\r\n\t\t\t\tlet tempLocal = null;\r\n\t\t\t\tdata.data.map((local) => {\r\n\t\t\t\t\tlet temp = calcCrow(\r\n\t\t\t\t\t\tlocal.latitude,\r\n\t\t\t\t\t\tlocal.longitude,\r\n\t\t\t\t\t\tcoords.latitude,\r\n\t\t\t\t\t\tcoords.longitude\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (dist === null) {\r\n\t\t\t\t\t\tdist = temp;\r\n\t\t\t\t\t\ttempLocal = local;\r\n\t\t\t\t\t} else if (Math.abs(temp) < Math.abs(dist)) {\r\n\t\t\t\t\t\tdist = temp;\r\n\t\t\t\t\t\ttempLocal = local;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'SET_NEAR_LOCATION',\r\n\t\t\t\t\tnearLocation: tempLocal,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'SET_NEAR_LOCATION',\r\n\t\t\t\t\tnearLocation: data.data[0],\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n}\r\n\r\nexport { calcCrow, CustomSlider, marks, getNearLocation };\r\n"]},"metadata":{},"sourceType":"module"}