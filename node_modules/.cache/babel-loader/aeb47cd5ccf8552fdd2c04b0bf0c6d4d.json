{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fhenriques\\\\Documents\\\\Rep\\\\fe\\\\src\\\\components\\\\Map\\\\index.js\";\nimport React, { useState } from 'react';\nimport Portugal from './portugal';\nimport { RadioSVGMap } from 'react-svg-map';\nimport './style.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { get } from '../../services/api';\nimport Forecast from '../Forecast';\nexport default function Map() {\n  const [tooltipStyle, setToolTipStyle] = useState({\n    display: 'none'\n  });\n  const [pointedLocation, setPointedLocation] = useState(null);\n  const [error, setError] = useState(false);\n  const dispatch = useDispatch();\n  const index = useSelector(state => {\n    return state.ipma.mapDay;\n  });\n  const regions = useSelector(state => {\n    return state.ipma.regions;\n  });\n  const locationCodes = {\n    Aveiro: 1010500,\n    Beja: 1020500,\n    Braga: 1030300,\n    Bragança: 1040200,\n    'Castelo Branco': 1050200,\n    Coimbra: 1060300,\n    Évora: 1070500,\n    Faro: 1080500,\n    Guarda: 1090700,\n    Leiria: 1100900,\n    Lisboa: 1110600,\n    Portalegre: 1121400,\n    Porto: 1131200,\n    Santarém: 1141600,\n    Setúbal: 1151200,\n    'Viana do Castelo': 1160900,\n    'Vila Real': 1171400,\n    Viseu: 1182300\n  };\n\n  function getLocationName(event) {\n    return event.target.attributes.name.value;\n  }\n\n  function getLocationInfo(pointedLocation, updateForecast = false) {\n    get(`http://api.ipma.pt/open-data/forecast/meteorology/cities/daily/${locationCodes[pointedLocation]}.json`, {}).then(data => {\n      setPointedLocation(data.data[index]);\n\n      if (updateForecast) {\n        dispatch({\n          type: 'SET_FORECAST',\n          forecast: data\n        });\n        dispatch({\n          type: 'SET_LOCAL',\n          local: pointedLocation\n        });\n      }\n    }).catch(error => {\n      setError(true);\n    });\n  }\n\n  function handleChange(selectedNode) {\n    getLocationInfo(selectedNode.attributes.name.value, true);\n  }\n\n  function handleLocationMouseOver(event) {\n    const pointedLocation = getLocationName(event);\n    getLocationInfo(pointedLocation);\n  }\n\n  function handleLocationMouseOut() {\n    setPointedLocation(null);\n    setToolTipStyle({\n      display: 'none'\n    });\n  }\n\n  function handleLocationMouseMove(event) {\n    const tooltipStyle = {\n      display: 'block',\n      top: event.clientY + 20,\n      left: event.clientX - 140\n    };\n    setToolTipStyle(tooltipStyle);\n  }\n\n  return /*#__PURE__*/React.createElement(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: 'svg__block__map--pt',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(RadioSVGMap, {\n    map: Portugal,\n    locationClassName: async el => {\n      let final = '';\n      await regions.filter(async tempRegion => {\n        if (tempRegion.local === el.name) {\n          const temp = await get(`http://api.ipma.pt/open-data/forecast/meteorology/cities/daily/${tempRegion.globalIdLocal}.json`, {}).then(data => {\n            let str = '';\n\n            if (parseInt(data.data[index].precipitaProb) < 10) {\n              str = 'svg-map__location svg-map__location--heat0';\n            } else if (parseInt(data.data[index].precipitaProb) < 20) {\n              str = 'svg-map__location svg-map__location--heat_red_10';\n            } else if (parseInt(data.data[index].precipitaProb) < 30) {\n              str = 'svg-map__location svg-map__location--heat_red_20';\n            } else if (parseInt(data.data[index].precipitaProb) < 40) {\n              str = 'svg-map__location svg-map__location--heat_red_30';\n            } else if (parseInt(data.data[index].precipitaProb) < 50) {\n              str = 'svg-map__location svg-map__location--heat_red_40';\n            } else if (parseInt(data.data[index].precipitaProb) < 60) {\n              str = 'svg-map__location svg-map__location--heat_red_50';\n            } else if (parseInt(data.data[index].precipitaProb) < 70) {\n              str = 'svg-map__location svg-map__location--heat_red_60';\n            } else if (parseInt(data.data[index].precipitaProb) < 80) {\n              str = 'svg-map__location svg-map__location--heat_red_70';\n            } else if (parseInt(data.data[index].precipitaProb) < 90) {\n              str = 'svg-map__location svg-map__location--heat_red_80';\n            } else if (parseInt(data.data[index].precipitaProb) < 100) {\n              str = 'svg-map__location svg-map__location--heat_red_90';\n            } else {\n              str = 'svg-map__location svg-map__location--heat_red_100';\n            }\n\n            return str;\n          }).catch(error => {\n            setError(true);\n            return 'svg-map__location svg-map__location--heat0';\n          });\n          console.log(temp);\n          final = temp;\n          console.log(final);\n        }\n\n        return final;\n      });\n      console.log(final);\n    },\n    onLocationMouseOver: handleLocationMouseOver,\n    onLocationMouseOut: handleLocationMouseOut,\n    onLocationMouseMove: handleLocationMouseMove,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg__block__map__tooltip\",\n    style: tooltipStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }\n  }, pointedLocation && /*#__PURE__*/React.createElement(Forecast, {\n    pointedLocation: pointedLocation,\n    style: {\n      backgroundColor: '#21255690'\n    },\n    sm: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/fhenriques/Documents/Rep/fe/src/components/Map/index.js"],"names":["React","useState","Portugal","RadioSVGMap","useDispatch","useSelector","get","Forecast","Map","tooltipStyle","setToolTipStyle","display","pointedLocation","setPointedLocation","error","setError","dispatch","index","state","ipma","mapDay","regions","locationCodes","Aveiro","Beja","Braga","Bragança","Coimbra","Évora","Faro","Guarda","Leiria","Lisboa","Portalegre","Porto","Santarém","Setúbal","Viseu","getLocationName","event","target","attributes","name","value","getLocationInfo","updateForecast","then","data","type","forecast","local","catch","handleChange","selectedNode","handleLocationMouseOver","handleLocationMouseOut","handleLocationMouseMove","top","clientY","left","clientX","el","final","filter","tempRegion","temp","globalIdLocal","str","parseInt","precipitaProb","console","log","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Portugal from './portugal';\r\nimport { RadioSVGMap } from 'react-svg-map';\r\nimport './style.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { get } from '../../services/api';\r\nimport Forecast from '../Forecast';\r\n\r\nexport default function Map() {\r\n\tconst [tooltipStyle, setToolTipStyle] = useState({ display: 'none' });\r\n\tconst [pointedLocation, setPointedLocation] = useState(null);\r\n\tconst [error, setError] = useState(false);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst index = useSelector((state) => {\r\n\t\treturn state.ipma.mapDay;\r\n\t});\r\n\r\n\tconst regions = useSelector((state) => {\r\n\t\treturn state.ipma.regions;\r\n\t});\r\n\r\n\tconst locationCodes = {\r\n\t\tAveiro: 1010500,\r\n\t\tBeja: 1020500,\r\n\t\tBraga: 1030300,\r\n\t\tBragança: 1040200,\r\n\t\t'Castelo Branco': 1050200,\r\n\t\tCoimbra: 1060300,\r\n\t\tÉvora: 1070500,\r\n\t\tFaro: 1080500,\r\n\t\tGuarda: 1090700,\r\n\t\tLeiria: 1100900,\r\n\t\tLisboa: 1110600,\r\n\t\tPortalegre: 1121400,\r\n\t\tPorto: 1131200,\r\n\t\tSantarém: 1141600,\r\n\t\tSetúbal: 1151200,\r\n\t\t'Viana do Castelo': 1160900,\r\n\t\t'Vila Real': 1171400,\r\n\t\tViseu: 1182300,\r\n\t};\r\n\r\n\tfunction getLocationName(event) {\r\n\t\treturn event.target.attributes.name.value;\r\n\t}\r\n\r\n\tfunction getLocationInfo(pointedLocation, updateForecast = false) {\r\n\t\tget(\r\n\t\t\t`http://api.ipma.pt/open-data/forecast/meteorology/cities/daily/${locationCodes[pointedLocation]}.json`,\r\n\t\t\t{}\r\n\t\t)\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetPointedLocation(data.data[index]);\r\n\t\t\t\tif (updateForecast) {\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: 'SET_FORECAST',\r\n\t\t\t\t\t\tforecast: data,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: 'SET_LOCAL',\r\n\t\t\t\t\t\tlocal: pointedLocation,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tsetError(true);\r\n\t\t\t});\r\n\t}\r\n\r\n\tfunction handleChange(selectedNode) {\r\n\t\tgetLocationInfo(selectedNode.attributes.name.value, true);\r\n\t}\r\n\r\n\tfunction handleLocationMouseOver(event) {\r\n\t\tconst pointedLocation = getLocationName(event);\r\n\r\n\t\tgetLocationInfo(pointedLocation);\r\n\t}\r\n\r\n\tfunction handleLocationMouseOut() {\r\n\t\tsetPointedLocation(null);\r\n\t\tsetToolTipStyle({ display: 'none' });\r\n\t}\r\n\r\n\tfunction handleLocationMouseMove(event) {\r\n\t\tconst tooltipStyle = {\r\n\t\t\tdisplay: 'block',\r\n\t\t\ttop: event.clientY + 20,\r\n\t\t\tleft: event.clientX - 140,\r\n\t\t};\r\n\t\tsetToolTipStyle(tooltipStyle);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<article>\r\n\t\t\t<div className={'svg__block__map--pt'}>\r\n\t\t\t\t<RadioSVGMap\r\n\t\t\t\t\tmap={Portugal}\r\n\t\t\t\t\tlocationClassName={async (el) => {\r\n\t\t\t\t\t\tlet final = '';\r\n\t\t\t\t\t\tawait regions.filter(async (tempRegion) => {\r\n\t\t\t\t\t\t\tif (tempRegion.local === el.name) {\r\n\t\t\t\t\t\t\t\tconst temp = await get(\r\n\t\t\t\t\t\t\t\t\t`http://api.ipma.pt/open-data/forecast/meteorology/cities/daily/${tempRegion.globalIdLocal}.json`,\r\n\t\t\t\t\t\t\t\t\t{}\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t.then((data) => {\r\n\t\t\t\t\t\t\t\t\t\tlet str = '';\r\n\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\tparseInt(\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata.data[index].precipitaProb\r\n\t\t\t\t\t\t\t\t\t\t\t) < 10\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\tstr =\r\n\t\t\t\t\t\t\t\t\t\t\t\t'svg-map__location svg-map__location--heat0';\r\n\t\t\t\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\t\t\t\tparseInt(\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata.data[index].precipitaProb\r\n\t\t\t\t\t\t\t\t\t\t\t) < 20\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\tstr =\r\n\t\t\t\t\t\t\t\t\t\t\t\t'svg-map__location svg-map__location--heat_red_10';\r\n\t\t\t\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\t\t\t\tparseInt(\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata.data[index].precipitaProb\r\n\t\t\t\t\t\t\t\t\t\t\t) < 30\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\tstr =\r\n\t\t\t\t\t\t\t\t\t\t\t\t'svg-map__location svg-map__location--heat_red_20';\r\n\t\t\t\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\t\t\t\tparseInt(\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata.data[index].precipitaProb\r\n\t\t\t\t\t\t\t\t\t\t\t) < 40\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\tstr =\r\n\t\t\t\t\t\t\t\t\t\t\t\t'svg-map__location svg-map__location--heat_red_30';\r\n\t\t\t\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\t\t\t\tparseInt(\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata.data[index].precipitaProb\r\n\t\t\t\t\t\t\t\t\t\t\t) < 50\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\tstr =\r\n\t\t\t\t\t\t\t\t\t\t\t\t'svg-map__location svg-map__location--heat_red_40';\r\n\t\t\t\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\t\t\t\tparseInt(\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata.data[index].precipitaProb\r\n\t\t\t\t\t\t\t\t\t\t\t) < 60\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\tstr =\r\n\t\t\t\t\t\t\t\t\t\t\t\t'svg-map__location svg-map__location--heat_red_50';\r\n\t\t\t\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\t\t\t\tparseInt(\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata.data[index].precipitaProb\r\n\t\t\t\t\t\t\t\t\t\t\t) < 70\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\tstr =\r\n\t\t\t\t\t\t\t\t\t\t\t\t'svg-map__location svg-map__location--heat_red_60';\r\n\t\t\t\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\t\t\t\tparseInt(\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata.data[index].precipitaProb\r\n\t\t\t\t\t\t\t\t\t\t\t) < 80\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\tstr =\r\n\t\t\t\t\t\t\t\t\t\t\t\t'svg-map__location svg-map__location--heat_red_70';\r\n\t\t\t\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\t\t\t\tparseInt(\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata.data[index].precipitaProb\r\n\t\t\t\t\t\t\t\t\t\t\t) < 90\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\tstr =\r\n\t\t\t\t\t\t\t\t\t\t\t\t'svg-map__location svg-map__location--heat_red_80';\r\n\t\t\t\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\t\t\t\tparseInt(\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata.data[index].precipitaProb\r\n\t\t\t\t\t\t\t\t\t\t\t) < 100\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\tstr =\r\n\t\t\t\t\t\t\t\t\t\t\t\t'svg-map__location svg-map__location--heat_red_90';\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tstr =\r\n\t\t\t\t\t\t\t\t\t\t\t\t'svg-map__location svg-map__location--heat_red_100';\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\treturn str;\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\t\t\t\t\tsetError(true);\r\n\t\t\t\t\t\t\t\t\t\treturn 'svg-map__location svg-map__location--heat0';\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tconsole.log(temp);\r\n\t\t\t\t\t\t\t\tfinal = temp;\r\n\t\t\t\t\t\t\t\tconsole.log(final);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn final;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tconsole.log(final);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonLocationMouseOver={handleLocationMouseOver}\r\n\t\t\t\t\tonLocationMouseOut={handleLocationMouseOut}\r\n\t\t\t\t\tonLocationMouseMove={handleLocationMouseMove}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className='svg__block__map__tooltip' style={tooltipStyle}>\r\n\t\t\t\t\t{pointedLocation && (\r\n\t\t\t\t\t\t<Forecast\r\n\t\t\t\t\t\t\tpointedLocation={pointedLocation}\r\n\t\t\t\t\t\t\tstyle={{ backgroundColor: '#21255690' }}\r\n\t\t\t\t\t\t\tsm\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</article>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}